{
  "name": "grunt-string-replace",
  "description": "Replaces strings on files by using string or regex patterns. Attempts to be a String.prototype.replace adapter task for your grunt project.",
  "version": "0.2.7",
  "homepage": "https://github.com/erickrdch/grunt-string-replace",
  "author": {
    "name": "Erick Ruiz de Chavez",
    "email": "erickrdch@gmail.com",
    "url": "http://erickrdch.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/erickrdch/grunt-string-replace.git"
  },
  "bugs": {
    "url": "https://github.com/erickrdch/grunt-string-replace/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/erickrdch/grunt-string-replace/blob/master/LICENSE-MIT"
    }
  ],
  "main": "tasks/string-replace",
  "bin": {
    "grunt-string-replace": "bin/grunt-string-replace"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt --verbose"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "devDependencies": {
    "grunt-contrib-clean": "0.5.0",
    "grunt-contrib-jshint": "0.6.4",
    "grunt-contrib-nodeunit": "0.2.1",
    "grunt-contrib-watch": "0.5.3",
    "grunt-contrib-copy": "0.4.1"
  },
  "keywords": [
    "gruntplugin",
    "string",
    "replace",
    "regex"
  ],
  "dependencies": {
    "async": "~0.2.9"
  },
  "readme": "# grunt-string-replace [![Build Status](https://travis-ci.org/erickrdch/grunt-string-replace.png)](https://travis-ci.org/erickrdch/grunt-string-replace)  [![Node Dependencies](https://david-dm.org/erickrdch/grunt-string-replace.png)](https://david-dm.org/erickrdch/grunt-string-replace)\n\nReplaces strings on files by using string or regex patterns. Attempts to be a [String.prototype.replace](http://www.ecma-international.org/ecma-262/5.1/#sec-15.5.4.11) adapter task for your grunt project.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.0`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-string-replace --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-string-replace');\n```\n\n*This plugin was designed to work with Grunt 0.4.x. If you're still using grunt v0.3.x it's strongly recommended that [you upgrade](http://gruntjs.com/upgrading-from-0.3-to-0.4), but in case you can't please use [v0.1.1-1](https://github.com/erickrdch/grunt-string-replace/tree/0.1.1-1).*\n\n## Documentation\n\n### Configuration\n\nInside your `Gruntfile.js` file add a section named `string-replace`. This section specifies the files to edit, destinations, patterns and replacements.\n\n#### Parameters\n\n##### files ```object```\n\nThis defines what files this task will edit and must follow [Gruntfile Files mapping](http://gruntjs.com/configuring-tasks#files).\n\n##### options ```object```\n\nThis controls how this task operates and should contain key:value pairs, see options below.\n\n#### Options\n\n##### replacements ```array```\n\nThis option will hold all your pattern/replacement pairs. A pattern/replacement pair should contain key:value pairs containing:\n\n* pattern ```string``` or ```regex```\n* replacement ```string```\n\n```javascript\noptions: {\n  replacements: [{\n    pattern: /\\/(asdf|qwer)\\//ig,\n    replacement: '\"$1\"'\n  }, {\n    pattern: ',',\n    replacement: ';'\n  }]\n}\n```\n\n###### Note\n\nIf the pattern is a string, only the first occurrence will be replaced, as stated on [String.prototype.replace](http://www.ecma-international.org/ecma-262/5.1/#sec-15.5.4.11).\n\n#### Config Example\n\n```javascript\n'string-replace': {\n  dist: {\n    files: {\n      'path/to/directory/': 'path/to/source/*', // includes files in dir\n      'path/to/directory/': 'path/to/source/**', // includes files in dir and subdirs\n      'path/to/project-<%= pkg.version %>/': 'path/to/source/**', // variables in destination\n      'path/to/directory/': ['path/to/sources/*.js', 'path/to/more/*.js'], // include JS files in two diff dirs\n      'path/to/filename.ext': 'path/to/source.ext'\n    },\n    options: {\n      replacements: [{\n        pattern: /\\/(asdf|qwer)\\//ig,\n        replacement: ''$1''\n      }, {\n        pattern: ',',\n        replacement: ';'\n      }]\n    }\n  },\n  inline: {\n    options: {\n      replacements: [\n        // place files inline example\n        {\n        \tpattern: '<script src='js/async.min.js'></script>',\n        \treplacement: '<script><%= grunt.file.read('path/to/source/js/async.min.js') %></script>'\n      \t}\n      ]\n    },\n    files: {...}\n  }\n}\n```\n\n## Advanced Usage\n\nSince grunt-string-replace is basically a wrapper of [String.prototype.replace](http://www.ecma-international.org/ecma-262/5.1/#sec-15.5.4.11) you can also provide a function as a replacement pattern instead of a string or a template. To get more details about how to use a function as replacement pattern I recommend you to read [Specifying a function as a parameter](https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_function_as_a_parameter).\n\n### Example\n\nWe will be reading file names from HTML comments and use the paths later to fetch the content and insert it inside a resulting HTML. Assuming the following setup:\n\n*dist/index.html*\n\n```html\n<!-- @import partials/header.html -->\ncontent here\n<!-- @import partials/footer.html -->\n```\n\n*dist/partials/header.html*\n\n```html\n<html><head></head><body>\n```\n\n*dist/partials/footer.html*\n\n```html\n</body></html>\n```\n\n*Gruntfile.js*\n\n```javascript\n'use strict';\n\nmodule.exports = function (grunt) {\n  // Project configuration.\n  grunt.initConfig({\n    config: {\n      dist: 'dist/'\n    },\n    'string-replace': {\n      kit: {\n        files: {\n          '<%= config.dist %>index-dist.html': '<%= config.dist %>index.html'\n        },\n        options: {\n          replacements: [{\n            pattern: /<!-- @import (.*?) -->/ig,\n            replacement: function (match, p1, offset, string) {\n              return grunt.file.read(grunt.config.get('config.dist') + p1);\n            }\n          }]\n        }\n      }\n    }\n  });\n\n  // These plugins provide necessary tasks.\n  grunt.loadNpmTasks('grunt-string-replace');\n\n  // Default task.\n  grunt.registerTask('default', ['string-replace']);\n};\n```\n\nAfter executing grunt we get the following:\n\n*dist/index-dist.html*\n\n```html\n<html><head></head><body>\ncontent here\n</body></html>\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt][grunt].\n\n## Release History\n\n0.2.7\n  - External libraries are deprecated on Grunt 0.4.2\n    - Remove grunt.util._ as it is not really required\n    - Replace grunt.util.async with async\n\n0.2.6\n  - Update Getting Started section\n  - Fix broken link to Gruntfile's File section (#18)\n\n0.2.5\n  - Fix for #16\n  - Fix for Travis CI config file\n  - Added error handling to finish the task if something did not work as expected instead of just fail silently\n  - Updated dev dependencies to latest stable versions\n\n0.2.4\n  - Asynchronously loop files. Original idea contributed by [maxnachlinger](https://github.com/maxnachlinger)\n  - Inline replacing example on README.md. Contributed by [willfarrell](https://github.com/willfarrell)\n\n0.2.3\n  - Removed dependency with grunt-lib-contrib due to deprecation of 'options' method in favor of Grunt's 'options' util.\n  - Updated grunt-contrib-jshint version in package.json to 0.3.0\n  - Updated grunt-contrib-watch version in package.json to 0.3.1\n  - Updated grunt version in package.json to 0.4.1\n  - Added Node.js v0.10 to Travis CI config file\n\n0.2.2\n  - Added support to be used as npm module. Contributed by [thanpolas](https://github.com/thanpolas).\n\n0.2.1\n  - Updated dependencies for Grunt 0.4.0.\n\n0.2.0\n  - Added Support for grunt 0.4.0. This version will not support grunt 0.3.x, if you need to use it then ```npm install grunt-string-replace@0.1```.\n\n0.1.1-1\n  - Added Clean task (and dev dependency) to remove test generated file before testing.\n  - Added Sublime Text project files and test generated file to npm ignore list.\n\n0.1.1\n  - Fix dependency with grunt-lib-contrib.\n\n0.1.0-1\n  - Fixed a typo on package.json description.\n  - Added a note about string pattern behavior.\n\n0.1.0\n  - Initial release.\n\n## License\nCopyright (c) 2012 Erick Ruiz de Chavez.\nLicensed under the MIT license.\n\n[grunt]: http://gruntjs.com/\n",
  "readmeFilename": "README.md",
  "_id": "grunt-string-replace@0.2.7",
  "_from": "grunt-string-replace@latest"
}
